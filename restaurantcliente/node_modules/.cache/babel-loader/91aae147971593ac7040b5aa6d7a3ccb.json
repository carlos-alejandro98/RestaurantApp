{"ast":null,"code":"var _jsxFileName = \"/Users/carlitos/Downloads/restaurantcliente/src/components/ui/Orden.js\";\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../../firebase';\n\nconst Orden = ({\n  orden\n}) => {\n  const [tiempoentrega, guardarTiempoEntrega] = useState(0); // Context de firebase\n\n  const {\n    firebase\n  } = useContext(FirebaseContext); // define el tiempo de entrega en tiempo real\n\n  const definirTiempo = id => {\n    try {\n      firebase.db.collection('ordenes').doc(id).update({\n        tiempoentrega\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Completa el estado de una orden\n\n\n  const completarOrden = id => {\n    try {\n      firebase.db.collection('ordenes').doc(id).update({\n        completado: true\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sm:w-1/2 lg:w-1/3 px-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3 shadow-md bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-yellow-600 text-lg font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \" \", orden.id, \" \"), orden.orden.map(platillos => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \" \", platillos.cantidad, \" \", platillos.nombre, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Total a Pagar: $ \", orden.total), orden.tiempoentrega === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Tiempo de Entrega\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  \",\n    min: \"1\",\n    max: \"20\",\n    placeholder: \"20\",\n    value: tiempoentrega,\n    onChange: e => guardarTiempoEntrega(parseInt(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => definirTiempo(orden.id),\n    type: \"submit\",\n    className: \"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Definir Tiempo\")), orden.tiempoentrega > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Tiempo de Entrega:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \" \", orden.tiempoentrega, \" Minutos\")), !orden.completado && orden.tiempoentrega > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\",\n    onClick: () => completarOrden(orden.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }\n  }, \"Marcar como lista\")));\n};\n\nexport default Orden;","map":{"version":3,"sources":["/Users/carlitos/Downloads/restaurantcliente/src/components/ui/Orden.js"],"names":["React","useState","useContext","FirebaseContext","Orden","orden","tiempoentrega","guardarTiempoEntrega","firebase","definirTiempo","id","db","collection","doc","update","error","console","log","completarOrden","completado","map","platillos","cantidad","nombre","total","e","parseInt","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAEzB,QAAM,CAACC,aAAD,EAAgBC,oBAAhB,IAAwCN,QAAQ,CAAC,CAAD,CAAtD,CAFyB,CAIzB;;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeN,UAAU,CAACC,eAAD,CAA/B,CALyB,CAOzB;;AACA,QAAMM,aAAa,GAAGC,EAAE,IAAI;AACxB,QAAI;AACAF,MAAAA,QAAQ,CAACG,EAAT,CAAYC,UAAZ,CAAuB,SAAvB,EACKC,GADL,CACSH,EADT,EAEKI,MAFL,CAEY;AACJR,QAAAA;AADI,OAFZ;AAKH,KAND,CAME,OAAOS,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD,CARyB,CAoBzB;;;AACA,QAAMG,cAAc,GAAGR,EAAE,IAAI;AACzB,QAAI;AACAF,MAAAA,QAAQ,CAACG,EAAT,CAAYC,UAAZ,CAAuB,SAAvB,EACKC,GADL,CACSH,EADT,EAEKI,MAFL,CAEY;AACJK,QAAAA,UAAU,EAAE;AADR,OAFZ;AAKH,KAND,CAME,OAAOJ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoDV,KAAK,CAACK,EAA1D,MADJ,EAEKL,KAAK,CAACA,KAAN,CAAYe,GAAZ,CAAiBC,SAAS,iBACvB;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+BA,SAAS,CAACC,QAAzC,OAAoDD,SAAS,CAACE,MAA9D,MADH,CAFL,eAMI;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyDlB,KAAK,CAACmB,KAA/D,CANJ,EAQKnB,KAAK,CAACC,aAAN,KAAwB,CAAxB,iBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAKI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,8HAFd;AAGI,IAAA,GAAG,EAAC,GAHR;AAII,IAAA,GAAG,EAAC,IAJR;AAKI,IAAA,WAAW,EAAC,IALhB;AAMI,IAAA,KAAK,EAAEA,aANX;AAOI,IAAA,QAAQ,EAAGmB,CAAC,IAAIlB,oBAAoB,CAAEmB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV,CAPxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAeI;AACI,IAAA,OAAO,EAAG,MAAMnB,aAAa,CAACJ,KAAK,CAACK,EAAP,CADjC;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAC,8EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ,CATR,EAkCKL,KAAK,CAACC,aAAN,GAAsB,CAAtB,iBACG;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,KAAK,CAACC,aAApC,aADJ,CAnCR,EAwCM,CAACD,KAAK,CAACc,UAAP,IAAqBd,KAAK,CAACC,aAAN,GAAsB,CAA3C,iBACC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,8EAFX;AAGC,IAAA,OAAO,EAAG,MAAMY,cAAc,CAAEb,KAAK,CAACK,EAAR,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAzCP,CADJ,CADJ;AAsDH,CAvFD;;AAyFA,eAAeN,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../../firebase';\n\nconst Orden = ({ orden }) => {\n\n    const [tiempoentrega, guardarTiempoEntrega] = useState(0);\n\n    // Context de firebase\n    const { firebase } = useContext(FirebaseContext);\n\n    // define el tiempo de entrega en tiempo real\n    const definirTiempo = id => {\n        try {\n            firebase.db.collection('ordenes')\n                .doc(id)\n                .update({\n                    tiempoentrega\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Completa el estado de una orden\n    const completarOrden = id => {\n        try {\n            firebase.db.collection('ordenes')\n                .doc(id)\n                .update({\n                    completado: true\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return ( \n        <div className=\"sm:w-1/2 lg:w-1/3 px-2 mb-4\">\n            <div className=\"p-3 shadow-md bg-white\">\n                <h1 className=\"text-yellow-600 text-lg font-bold\"> {orden.id} </h1>\n                {orden.orden.map( platillos => (\n                    <p className=\"text-gray-600\"> {platillos.cantidad} {platillos.nombre} </p>\n                ) )}\n\n                <p className=\"text-gray-700 font-bold\">Total a Pagar: $ {orden.total}</p>\n\n                {orden.tiempoentrega === 0 && (\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            Tiempo de Entrega\n                        </label>\n\n                        <input\n                            type=\"number\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  \"\n                            min=\"1\"\n                            max=\"20\"\n                            placeholder=\"20\"\n                            value={tiempoentrega}\n                            onChange={ e => guardarTiempoEntrega( parseInt(e.target.value) ) }\n                        />\n\n                        <button\n                            onClick={ () => definirTiempo(orden.id) }\n                            type=\"submit\"\n                            className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\"\n                        >\n                            Definir Tiempo\n                        </button>\n                    </div>\n                )}\n\n                {orden.tiempoentrega > 0 && (\n                    <p className=\"text-gray-700\">Tiempo de Entrega:\n                        <span className=\"font-bold\"> {orden.tiempoentrega} Minutos</span>\n                    </p>\n                )}\n\n                { !orden.completado && orden.tiempoentrega > 0 && (\n                   <button\n                    type=\"button\"\n                    className=\"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\"\n                    onClick={ () => completarOrden( orden.id )}\n                   >\n                       Marcar como lista\n                   </button>\n                ) }\n            </div>\n        </div>\n     );\n}\n \nexport default Orden;"]},"metadata":{},"sourceType":"module"}